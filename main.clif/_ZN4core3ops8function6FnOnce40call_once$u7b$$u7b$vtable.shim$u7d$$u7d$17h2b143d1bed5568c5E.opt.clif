set opt_level=none
set tls_model=macho
set libcall_call_conv=isa_default
set probestack_size_log2=12
set probestack_strategy=inline
set bb_padding_log2_minus_one=0
set regalloc_checker=0
set regalloc_verbose_logs=0
set enable_alias_analysis=1
set enable_verifier=0
set enable_pcc=0
set is_pic=1
set use_colocated_libcalls=0
set enable_float=1
set enable_nan_canonicalization=0
set enable_pinned_reg=0
set enable_atomics=1
set enable_safepoints=0
set enable_llvm_abi_extensions=1
set unwind_info=1
set preserve_frame_pointers=1
set machine_code_cfg_info=0
set enable_probestack=1
set enable_jump_tables=1
set enable_heap_access_spectre_mitigation=1
set enable_table_access_spectre_mitigation=1
set enable_incremental_compilation_cache_checks=0
target aarch64 has_lse=0 has_pauth=0 sign_return_address_all=0 sign_return_address=0 sign_return_address_with_bkey=0 use_bti=0


function u0:3(i64) -> i32 apple_aarch64 {
; symbol _ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h2b143d1bed5568c5E
; instance Instance { def: VTableShim(DefId(2:3497 ~ core[0294]::ops::function::FnOnce::call_once)), args: [Closure(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0}), [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)]), ()] }
; abi FnAbi { args: [ArgAbi { layout: TyAndLayout { ty: *mut {closure@std::rt::lang_start<()>::{closure#0}}, layout: Layout { size: Size(8 bytes), align: AbiAndPrefAlign { abi: Align(8 bytes), pref: Align(8 bytes) }, abi: Scalar(Initialized { value: Pointer(AddressSpace(0)), valid_range: 0..=18446744073709551615 }), fields: Primitive, largest_niche: None, variants: Single { index: 0 }, max_repr_align: None, unadjusted_abi_align: Align(8 bytes) } }, mode: Direct(ArgAttributes { regular: NoUndef, arg_ext: None, pointee_size: Size(0 bytes), pointee_align: None }) }], ret: ArgAbi { layout: TyAndLayout { ty: i32, layout: Layout { size: Size(4 bytes), align: AbiAndPrefAlign { abi: Align(4 bytes), pref: Align(4 bytes) }, abi: Scalar(Initialized { value: Int(I32, true), valid_range: 0..=4294967295 }), fields: Primitive, largest_niche: None, variants: Single { index: 0 }, max_repr_align: None, unadjusted_abi_align: Align(4 bytes) } }, mode: Direct(ArgAttributes { regular: NoUndef, arg_ext: None, pointee_size: Size(0 bytes), pointee_align: None }) }, c_variadic: false, fixed_count: 1, conv: Rust, can_unwind: false }

; kind  loc.idx   param    pass mode                            ty
; ssa   _0    i32                               4b 4, 4              var=0
; ret   _0      -          Direct(ArgAttributes { regular: NoUndef, arg_ext: None, pointee_size: Size(0 bytes), pointee_align: None }) i32
; arg   _1      = v0       Direct(ArgAttributes { regular: NoUndef, arg_ext: None, pointee_size: Size(0 bytes), pointee_align: None }) *mut Closure(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0}), [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)])

; kind  local ty                              size align (abi,pref)
; ssa   _1    *mut Closure(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0}), [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)])    8b 8, 8              var=1
; zst   _2    ()                                0b 1, 8              align=8,offset=

    sig0 = (i64) -> i32 apple_aarch64
    fn0 = colocated u0:4 sig0 ; Instance { def: ClosureOnceShim { call_once: DefId(2:3497 ~ core[0294]::ops::function::FnOnce::call_once), track_caller: false }, args: [Closure(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0}), [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)]), ()] }

block0(v0: i64):
    nop 
; write_cvalue: Var(_1, var1): *mut Closure(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0}), [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)]) <- ByVal(v0): *mut Closure(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0}), [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)])
    jump block1

block1:
    nop 
; 
; _0 = <Self as std::ops::FnOnce<Args>>::call_once(move (*_1), move _2)
    v2 = load.i64 notrap v0
    v3 = call fn0(v2)
; write_cvalue: Var(_0, var0): i32 <- ByVal(v3): i32
    jump block2

block2:
    nop 
; 
; return
    return v3
}
