set opt_level=none
set tls_model=macho
set libcall_call_conv=isa_default
set probestack_size_log2=12
set probestack_strategy=inline
set bb_padding_log2_minus_one=0
set regalloc_checker=0
set regalloc_verbose_logs=0
set enable_alias_analysis=1
set enable_verifier=0
set enable_pcc=0
set is_pic=1
set use_colocated_libcalls=0
set enable_float=1
set enable_nan_canonicalization=0
set enable_pinned_reg=0
set enable_atomics=1
set enable_safepoints=0
set enable_llvm_abi_extensions=1
set unwind_info=1
set preserve_frame_pointers=1
set machine_code_cfg_info=0
set enable_probestack=1
set enable_jump_tables=1
set enable_heap_access_spectre_mitigation=1
set enable_table_access_spectre_mitigation=1
set enable_incremental_compilation_cache_checks=0
target aarch64 has_lse=0 has_pauth=0 sign_return_address_all=0 sign_return_address=0 sign_return_address_with_bkey=0 use_bti=0


function u0:1(i64) -> i32 apple_aarch64 {
; symbol _ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h0c30888f5d4ab2e6E
; instance Instance { def: Item(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0})), args: [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)] }
; abi FnAbi { args: [ArgAbi { layout: TyAndLayout { ty: &{closure@std::rt::lang_start<()>::{closure#0}}, layout: Layout { size: Size(8 bytes), align: AbiAndPrefAlign { abi: Align(8 bytes), pref: Align(8 bytes) }, abi: Scalar(Initialized { value: Pointer(AddressSpace(0)), valid_range: 1..=18446744073709551615 }), fields: Primitive, largest_niche: Some(Niche { offset: Size(0 bytes), value: Pointer(AddressSpace(0)), valid_range: 1..=18446744073709551615 }), variants: Single { index: 0 }, max_repr_align: None, unadjusted_abi_align: Align(8 bytes) } }, mode: Direct(ArgAttributes { regular: NonNull | NoUndef, arg_ext: None, pointee_size: Size(0 bytes), pointee_align: Some(Align(8 bytes)) }) }], ret: ArgAbi { layout: TyAndLayout { ty: i32, layout: Layout { size: Size(4 bytes), align: AbiAndPrefAlign { abi: Align(4 bytes), pref: Align(4 bytes) }, abi: Scalar(Initialized { value: Int(I32, true), valid_range: 0..=4294967295 }), fields: Primitive, largest_niche: None, variants: Single { index: 0 }, max_repr_align: None, unadjusted_abi_align: Align(4 bytes) } }, mode: Direct(ArgAttributes { regular: NoUndef, arg_ext: None, pointee_size: Size(0 bytes), pointee_align: None }) }, c_variadic: false, fixed_count: 1, conv: Rust, can_unwind: false }

; kind  loc.idx   param    pass mode                            ty
; ssa   _0    i32                               4b 4, 4              var=0
; ret   _0      -          Direct(ArgAttributes { regular: NoUndef, arg_ext: None, pointee_size: Size(0 bytes), pointee_align: None }) i32
; arg   _1      = v0       Direct(ArgAttributes { regular: NonNull | NoUndef, arg_ext: None, pointee_size: Size(0 bytes), pointee_align: Some(Align(8 bytes)) }) &'{erased} Closure(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0}), [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)])

; kind  local ty                              size align (abi,pref)
; ssa   _1    &'{erased} Closure(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0}), [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)])    8b 8, 8              var=1
; stack _2    std::process::ExitCode            1b 1, 8              storage=ss0
; zst   _3    ()                                0b 1, 8              align=8,offset=
; ssa   _4    Binder { value: fn(), bound_vars: [] }    8b 8, 8              var=2
; ssa   _5    &'{erased} std::sys::pal::unix::process::process_common::ExitCode    8b 8, 8              var=3
; ssa   _6    u8                                1b 1, 1              var=4

    ss0 = explicit_slot 16, align = 16
    sig0 = (i64) apple_aarch64
    sig1 = () -> i8 apple_aarch64
    fn0 = colocated u0:2 sig0 ; Instance { def: Item(DefId(1:7139 ~ std[6a0d]::sys::backtrace::__rust_begin_short_backtrace)), args: [Binder { value: fn(), bound_vars: [] }, ()] }
    fn1 = colocated u0:7 sig1 ; Instance { def: Item(DefId(1:5609 ~ std[6a0d]::process::{impl#57}::report)), args: [] }

block0(v0: i64):
    v1 -> v0
    nop 
; write_cvalue: Var(_1, var1): &'{erased} Closure(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0}), [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)]) <- ByVal(v0): &'{erased} Closure(DefId(1:46 ~ std[6a0d]::rt::lang_start::{closure#0}), [(), i8, Binder { value: extern "RustCall" fn(()) -> i32, bound_vars: [] }, (Binder { value: fn(), bound_vars: [] },)])
    jump block1

block1:
    nop 
; _4 = ((*_1).0: fn() -> T)
; write_cvalue: Var(_4, var2): Binder { value: fn(), bound_vars: [] } <- ByRef(Pointer { base: Addr(v1), offset: Offset32(0) }, None): Binder { value: fn(), bound_vars: [] }
    v2 = load.i64 notrap v1
; 
; _3 = std::sys::backtrace::__rust_begin_short_backtrace::<fn() -> T, T>(move _4)
    call fn0(v2)
    jump block2

block2:
    nop 
; 
; _2 = <T as std::process::Termination>::report(move _3)
    v3 = call fn1()
; write_cvalue: Addr(Pointer { base: Stack(ss0), offset: Offset32(0) }, None): std::process::ExitCode <- ByVal(v3): std::process::ExitCode
    stack_store v3, ss0
    jump block3

block3:
    nop 
; _5 = &(_2.0: std::sys::pal::unix::process::process_common::ExitCode)
    v4 = stack_addr.i64 ss0
; write_cvalue: Var(_5, var3): &'{erased} std::sys::pal::unix::process::process_common::ExitCode <- ByVal(v4): &'{erased} std::sys::pal::unix::process::process_common::ExitCode
; _6 = ((_2.0: std::sys::pal::unix::process::process_common::ExitCode).0: u8)
; write_cvalue: Var(_6, var4): u8 <- ByRef(Pointer { base: Stack(ss0), offset: Offset32(0) }, None): u8
    v5 = stack_load.i8 ss0
; _0 = move _6 as i32 (IntToInt)
    v6 = uextend.i32 v5
; write_cvalue: Var(_0, var0): i32 <- ByVal(v6): i32
; 
; return
    return v6
}
